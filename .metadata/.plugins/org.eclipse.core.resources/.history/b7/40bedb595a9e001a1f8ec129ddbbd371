package com.hotalAdmin.hta.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.hotalAdmin.hta.model.Estadia;
import com.hotalAdmin.hta.repository.EstadiaRepository;
import com.hotalAdmin.hta.service.EstadiaService;

@RestController
@RequestMapping("/estadias")
public class EstadiaController {

	@Autowired
	private EstadiaRepository estadiaRepository;
	@Autowired
	private EstadiaService estadiaService;

	@GetMapping("/getEstadias")
	public ResponseEntity<List<Estadia>> getEstadias() {
		ResponseEntity<List<Estadia>> responseEntity = null;
		try {
			List<Estadia> estadiasPageable = estadiaService.getEstadias();
			responseEntity = ResponseEntity.ok(estadiasPageable);
		} catch (Exception e) {
			// TODO: Tratar erro melhor
			ResponseEntity.status(500).build();
		}

		return responseEntity;
	}

	@GetMapping("/getEstadiasPageable")
	public ResponseEntity<Page<Estadia>> getEstadiasPageable(Pageable pageable) {
		ResponseEntity<Page<Estadia>> responseEntity = null;
		try {
			Page<Estadia> estadiasPageable = estadiaService.getEstadiasPageable(pageable);
			responseEntity = ResponseEntity.ok(estadiasPageable);
		} catch (Exception e) {
			// TODO: Tratar erro melhor
			ResponseEntity.status(500).build();
		}

		return responseEntity;
	}

	@GetMapping("/getEstadia/{estadiaId}")
	public ResponseEntity<Estadia> getEstadia(@PathVariable Long estadiaId) {
		ResponseEntity<Estadia> responseEntity = null;
		try {
			Estadia estadia = estadiaRepository.findById(estadiaId).get();
			;
			responseEntity = ResponseEntity.ok(estadia);
		} catch (Exception e) {
			// TODO: Tratar erro melhor
			ResponseEntity.status(500).build();
		}

		return responseEntity;
	}

	@PostMapping("/createEstadias")
	public Estadia createEstadias(@RequestBody Estadia estadia) {
		return estadiaRepository.save(estadia);
	}

	@PutMapping("/updadeEstadia/{estadiaId}")
	public Estadia updadeEstadia(@PathVariable Long estadiaId, @RequestBody Estadia updatedEstadia) throws Exception {
		return estadiaRepository.findById(estadiaId).map(estadia -> {
			estadia.setAdicionalVeiculo(updatedEstadia.getAdicionalVeiculo());
			estadia.setDataEntrada(updatedEstadia.getDataEntrada());
			estadia.setDataSaida(updatedEstadia.getDataSaida());
			estadia.setHospede(updatedEstadia.getHospede());
			estadiaRepository.save(estadia);
			return estadia;
		}).orElseThrow(() -> new Exception("NOT FOUND"));

	}

	@DeleteMapping("/deleteEstadia/{estadiaId}")
	public ResponseEntity<?> deleteEstadia(@PathVariable Long estadiaId) {
		return estadiaRepository.findById(estadiaId).map(estadia -> {
			estadiaRepository.delete(estadia);
			return ResponseEntity.ok().build();
		}).orElse(ResponseEntity.notFound().build());
	}

}
